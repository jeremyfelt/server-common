# nginx.conf

# User to run nginx as
user www-data;

# Default to number of CPU cores available
worker_processes auto;

# Default error log file
error_log /var/log/nginx/error.log;

# Nginx process identifier
pid /var/run/nginx.pid;

# The EventsModule controls how Nginx deals with connections
events {
	# max clients = worker_processes (CPUs) * worker_connections
	worker_connections 2000;

	# Allow a worker to accept all current incoming connections at once.
	multi_accept on;

	# The technique through which multiple connections are handled.
	use epoll;
}

# The HttpCoreModule controls core features of Nginx's HTTP processing
http {

	# Define MIME types for files
	include      /etc/nginx/mime.types;
	default_type application/octet-stream;

	# Define a new custom JSON log format because I'm addicted to trying
	# out new log formats rather than understanding the existing ones.
	log_format combined_json escape=json '{'
								 '"timestamp":"$time_iso8601",'
								 '"scheme":"$scheme",'
								 '"http_host":"$http_host",'
								 '"url":"$uri",'
								 '"remote_addr":"$remote_addr",'
								 '"status":"$status",'
								 '"body_bytes_sent":"$body_bytes_sent",'
								 '"bytes_sent":"$bytes_sent",'
								 '"request_time":"$request_time",'
								 '"ssl_protocol":"$ssl_protocol",'
								 '"ssl_cipher":"$ssl_cipher",'
								 '"request":"$request",'
								 '"request_method":"$request_method",'
								 '"request_length":"$request_length",'
								 '"http_referrer":"$http_referer",'
								 '"http_user_agent":"$http_user_agent",'
								 '"status":"$status"'
								 '}';

	# Combined log file stored in JSON format for external parsing.
	access_log /var/log/nginx/combined-access.json combined_json;

	# Sendfile should be off in a VirtualBox (local) environment because
	# of caching issues with the shared drive. In production, it should
	# be turned on as it does improve performance.
	sendfile on;

	# Some hash size settings required by Digital Ocean (apparently?)
	types_hash_bucket_size 64;
	server_names_hash_bucket_size 128;

	# Don't send out partial TCP frames
	tcp_nopush on;

	# How long each connection should stay idle.
	keepalive_timeout 30s;

	# The number of requests that can be served through a connection.
	keepalive_requests 1000;

	# Hide nginx version information
	server_tokens off;

	# Enable Gzip compression
	gzip on;

	# Compression level (1-9)
	gzip_comp_level 5;

	# Don't compress anything under 256 bytes
	gzip_min_length 256;

	# Compress data even for clients that are connecting to us via proxies,
	# identified by the "Via" header (required for CloudFront).
	gzip_proxied any;

	# Tell proxies to cache both the gzipped and regular version of a resource
	# whenever the client's Accept-Encoding capabilities header varies;
	# Avoids the issue where a non-gzip capable client (which is extremely rare
	# today) would display gibberish if their proxy gave them the gzipped version.
	gzip_vary on;

	# Compress output of these MIME-types
	gzip_types
		application/atom+xml
		application/javascript
		application/json
		application/ld+json
		application/manifest+json
		application/rss+xml
		application/vnd.geo+json
		application/vnd.ms-fontobject
		application/x-font-ttf
		application/x-web-app-manifest+json
		application/xhtml+xml
		application/xml
		font/opentype
		image/bmp
		image/svg+xml
		image/x-icon
		text/cache-manifest
		text/css
		text/plain
		text/vcard
		text/vnd.rim.location.xloc
		text/vtt
		text/x-component
		text/x-cross-domain-policy;
	  # text/html is always compressed by HttpGzipModule

	# Disable gzip for bad browsers
	gzip_disable "MSIE [1-6]\.(?!.*SV1)";

	# Upstream to abstract backend connection(s) for PHP.
	upstream php {
		server unix:/var/run/php5-fpm.sock;
	}

	# If the requested body size is more than the buffer size, the entire body is
	# written to a temporary file. Default is 8k or 16k depending on the platform.
	client_body_buffer_size 16k;

	# If a request line or header field does not fit into this buffer, then larger
	# buffers via large_client_header_buffers are allocated
	client_header_buffer_size 1k;

	# Max size of a body to allow. This affects uploads, but can be overwritten at
	# the individual site level
	client_max_body_size 50M;

	# The maximum number and size of large headers to accept from a client
	large_client_header_buffers 4 16k;

	# Per https://www.owasp.org/index.php/List_of_useful_HTTP_headers
	#
	# Prevents IE and Google Chrome from MIME-sniffing a response away from the declared
	# content-type.
	add_header X-Content-Type-Options nosniff always;

	# Use the highest mode available to a version of IE and support chrome frame.
	add_header X-UA-Compatible IE=Edge,chrome=1;

	# Enable the XSS filter built into modern web browsers. This will re-enable
	# the XSS filter if a user has disabled it.
	add_header X-XSS-Protection "1; mode=block" always;

	# Ensure that content served from this server is not embedded in other pages
	# unless they are of the same origin.
	add_header X-Frame-Options SAMEORIGIN always;

	proxy_cache_path /var/cache/nginx/proxy keys_zone=pzone:10m;

	include /etc/nginx/sites-enabled/*;
}
